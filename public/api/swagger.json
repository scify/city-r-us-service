{
    "swagger": "2.0",
    "info": {
        "title": "City-R-US API",
        "description": "API, API on the wall, who is the RESTiest of them all?",
        "contact": {
            "name": "SciFY"
        },
        "version": "1.0"
    },
    "host": "city-r-us-service/api",
    "basePath": "/v1",
    "schemes": [
        "http"
    ],
    "paths": {
        "/missions": {
            "get": {
                "tags": [
                    "missions"
                ],
                "summary": "Get all missions",
                "description": "Retrieve the missions of the application.",
                "operationId": "api.missions",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Returns all the missions of the application",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mission"
                            }
                        }
                    },
                    "400": {
                        "description": "Unauthorized action"
                    }
                }
            }
        },
        "/missions/store": {
            "post": {
                "tags": [
                    "missions"
                ],
                "summary": "Store a new mission",
                "description": "Create and save a new mission.",
                "operationId": "api.missions",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The JWT must be present in the Authorization header, in order to authenticate the user making the call. Format should be: Authorization: Bearer x.y.z",
                        "required": true,
                        "schema": "json",
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The missions's name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "The mission's description",
                        "required": false,
                        "type": "string",
                        "default": " "
                    },
                    {
                        "name": "mission_type",
                        "in": "query",
                        "description": "The mission's type. Should be either 'location' or 'route'",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "img_name",
                        "in": "query",
                        "description": "The mission's image name. Images are saved to the web app.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the id of the mission created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mission"
                            }
                        }
                    },
                    "400": {
                        "description": "Unauthorized action"
                    }
                }
            }
        },
        "/missions/update": {
            "post": {
                "tags": [
                    "missions"
                ],
                "summary": "Update an existing mission",
                "description": "Update the data of an existing mission",
                "operationId": "api.missions",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The JWT must be present in the Authorization header, in order to authenticate the user making the call. Format should be: Authorization: Bearer x.y.z",
                        "required": true,
                        "schema": "json",
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The missions's id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The missions's name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "The mission's description",
                        "required": false,
                        "type": "string",
                        "default": " "
                    },
                    {
                        "name": "mission_type",
                        "in": "query",
                        "description": "The mission's type. Should be either 'location' or 'route'",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "img_name",
                        "in": "query",
                        "description": "The mission's image name. Images are saved to the web app.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the id of the updated mission",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mission"
                            }
                        }
                    },
                    "400": {
                        "description": "Unauthorized action"
                    }
                }
            }
        },
        "/missions/delete": {
            "post": {
                "tags": [
                    "missions"
                ],
                "summary": "Delete a mission",
                "description": "Delete the mission from the db and Radical API",
                "operationId": "api.missions",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The JWT must be present in the Authorization header, in order to authenticate the user making the call. Format should be: Authorization: Bearer x.y.z",
                        "required": true,
                        "schema": "json",
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The missions's id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the id of the deleted mission",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mission"
                            }
                        }
                    },
                    "400": {
                        "description": "Unauthorized action"
                    }
                }
            }
        },
        "/missions/byName": {
            "get": {
                "tags": [
                    "missions"
                ],
                "summary": "Get a mission by name",
                "description": "Retrieve a mission based on a given name",
                "operationId": "api.missions",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The mission's name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a mission",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mission"
                            }
                        }
                    },
                    "400": {
                        "description": "Unauthorized action"
                    }
                }
            }
        },
        "/missions/byId": {
            "get": {
                "tags": [
                    "missions"
                ],
                "summary": "Get a mission by id",
                "description": "Retrieve a mission based on a given id",
                "operationId": "api.missions",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The mission's id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a mission",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mission"
                            }
                        }
                    },
                    "400": {
                        "description": "Unauthorized action"
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Register a user",
                "description": "Register a new user to the app.",
                "operationId": "api.users.register",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The user's name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "The user's email",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "The user's password",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "device_name",
                        "in": "query",
                        "description": "The name of the device",
                        "required": true,
                        "type": "string",
                        "default": ""
                    },
                    {
                        "name": "model",
                        "in": "query",
                        "description": "The model of the device",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "manufacturer",
                        "in": "query",
                        "description": "The manufacturer of the device",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User registered",
                        "schema": {
                            "$ref": "#/definitions/apiResponse"
                        }
                    },
                    "400": {
                        "description": "Malformed data"
                    },
                    "409": {
                        "description": "Email already exists"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "description": "Retrieve the users of the application.",
                "operationId": "api.users",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Returns all the users of the application",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user"
                            }
                        }
                    },
                    "400": {
                        "description": "Unauthorized action"
                    }
                }
            }
        },
        "/users/byEmail": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get user by email",
                "description": "Retrieve the user that corresponds to a certain email",
                "operationId": "api.users.byEmail",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "The user's email",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the user based on a certain id",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user"
                            }
                        }
                    }
                }
            }
        },
        "/users/byJWT": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get user by JWT",
                "description": "Retrieve the user that corresponds to a certain JWT",
                "operationId": "api.users.byJWT",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The JWT must be present in the Authorization header, in order to authenticate the user making the call. Format should be: Authorization: Bearer x.y.z",
                        "required": true,
                        "schema": "json",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the user based on a certain JWT",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user"
                            }
                        }
                    }
                }
            }
        },
        "/users/authenticate": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Authenticate a user",
                "description": "Authenticate a user based on given credentials.",
                "operationId": "api.users.authenticate",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "The user's email",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "The user's password",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User authenticated",
                        "schema": {
                            "$ref": "#/definitions/apiResponse"
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "400": {
                        "description": "Unauthorized action"
                    }
                }
            }
        },
        "/devices/register": {
            "post": {
                "tags": [
                    "devices"
                ],
                "summary": "Register a new device",
                "description": "Register a device to the Radical API and save it to db",
                "operationId": "api.devices",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The JWT must be present in the Authorization header, in order to authenticate the user making the call. Format should be: Authorization: Bearer x.y.z",
                        "required": false,
                        "schema": "json",
                        "type": "string"
                    },
                    {
                        "name": "mission_id",
                        "in": "query",
                        "description": "The id of the mission that the user wants to participate to",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "device_name",
                        "in": "query",
                        "description": "The name of the device",
                        "required": true,
                        "type": "string",
                        "default": ""
                    },
                    {
                        "name": "model",
                        "in": "query",
                        "description": "The model of the device",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "manufacturer",
                        "in": "query",
                        "description": "The manufacturer of the device",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "latitude",
                        "in": "query",
                        "description": "The latitude of the device",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "description": "The longitude of the device",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Examples: 'antenna', 'smartphone', 'sensor', ... ",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Valid values '0' (inactive) or '1' (active),",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Unauthorized action"
                    }
                }
            }
        },
        "/observations/store": {
            "post": {
                "tags": [
                    "observations"
                ],
                "summary": "Store a new observation",
                "description": "Create and save a new observation.",
                "operationId": "api.observations",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The JWT must be present in the Authorization header, in order to authenticate the user making the call. Format should be: Authorization: Bearer x.y.z",
                        "required": false,
                        "schema": "json",
                        "type": "string"
                    },
                    {
                        "name": "device_name",
                        "in": "query",
                        "description": "The name of the device",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "mission_id",
                        "in": "query",
                        "description": "The id of the chosen mission",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "latitude",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number",
                        "default": " "
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "observation_date",
                        "in": "query",
                        "description": "The date of the observation. It must follow the format y-m-d.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "measurements",
                        "in": "body",
                        "description": "An array of measurements.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/measurement"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the id of the observation created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/observation"
                            }
                        }
                    },
                    "400": {
                        "description": "Unauthorized action"
                    }
                }
            }
        }
    },
    "definitions": {
        "Error": {
            "required": [
                "code",
                "message"
            ],
            "properties": {
                "code": {
                    "description": "Class HomeController",
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "description": "Class HomeController",
                    "type": "string"
                }
            }
        },
        "mission": {
            "properties": {
                "id": {

                },
                "name": {

                },
                "description": {

                },
                "img_name": {

                },
                "type_id": {

                },
                "created_at": {

                },
                "updated_at": {

                }
            }
        },
        "observation": {
            "properties": {
                "device_id": {

                },
                "latitude": {

                },
                "longitude": {

                },
                "observation_date": {

                }
            }
        },
        "user": {
            "properties": {
                "id": {

                },
                "name": {

                },
                "email": {

                },
                "created_at": {

                },
                "updated_at": {

                }
            }
        },
        "apiResponse": {
            "properties": {
                "status": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "measurement": {
            "properties": {
                "latitude": {

                },
                "longitude": {

                },
                "observation_date": {

                }
            }
        }
    },
    "tags": [
        {
            "name": "users",
            "description": "Operations about users"
        },
        {
            "name": "missions",
            "description": "Operations about missions"
        },
        {
            "name": "devices",
            "description": "Operations about devices"
        },
        {
            "name": "observations",
            "description": "Operations about observations"
        }
    ]
}